[
    // Due to LaunchBar & Spotlight, map this to option-space
    { "keys": ["alt+space"], "command": "auto_complete" },
    { "keys": ["alt+space"], "command": "replace_completion_with_auto_complete", "context":
        [
            { "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
            { "key": "setting.tab_completion", "operator": "equal", "operand": true }
        ]
    },

    // Split Window Settings
    { "keys": ["alt+1"], "command": "move_to_group", "args": { "group": 0 } },
    { "keys": ["alt+2"], "command": "move_to_group", "args": { "group": 1 } },
    { "keys": ["alt+3"], "command": "move_to_group", "args": { "group": 2 } },
    { "keys": ["alt+4"], "command": "move_to_group", "args": { "group": 3 } },
    {
        "keys": ["super+alt+left"],
        "command": "set_layout",
        "args":
        {
            "cols": [0.0, 0.66, 1.0],
            "rows": [0.0, 1.0],
            "cells": [[0, 0, 1, 1], [1, 0, 2, 1]]
        }
    },
    {
        "keys": ["super+alt+right"],
        "command": "set_layout",
        "args":
        {
            "cols": [0.0, 0.33, 1.0],
            "rows": [0.0, 1.0],
            "cells": [[0, 0, 1, 1], [1, 0, 2, 1]]
        }
    },

    // Re-map initial key for the Tab Multi-Select split view stuff
    { "keys": ["ctrl+j", "super+up"], "command": "unselect_others" },
    { "keys": ["ctrl+j", "super+left"], "command": "unselect_to_left" },
    { "keys": ["ctrl+j", "super+right"], "command": "unselect_to_right" },
    { "keys": ["ctrl+j", "super+shift+left"], "command": "select_to_left" },
    { "keys": ["ctrl+j", "super+shift+right"], "command": "select_to_right" },
    { "keys": ["ctrl+j", "super+shift+["], "command": "focus_to_left" },
    { "keys": ["ctrl+j", "super+shift+]"], "command": "focus_to_right" },

    { "keys": ["super+ctrl+j"], "command": "join_lines" },
    
    // Change close tag to the same as TextMate
    { "keys": ["ctrl+shift+,"], "command": "insert_snippet", "args": { "name": "Packages/XML/long-tag.sublime-snippet" } },

    // Text conversion
    { "keys": ["ctrl+u"], "command": "upper_case" },
    { "keys": ["ctrl+alt+u"], "command": "title_case" },
    { "keys": ["ctrl+shift+u"], "command": "lower_case" },

    // Macros
    { "keys": ["ctrl+r"], "command": "toggle_record_macro" },
    { "keys": ["super+r"], "command": "run_macro" },

    // Auto-complete selection (from my Emacs config)
    {
        "keys": ["alt+n"],
        "command": "move",
        "args": {"by": "lines", "forward": true},
        "context": [{"key": "auto_complete_visible"}]
    },
    {
        "keys": ["alt+p"],
        "command": "move",
        "args": {"by": "lines", "forward": false},
        "context": [{"key": "auto_complete_visible"}]
    },

    // Use tab to re-indent a selction
    {
        "keys": ["tab"],
        "command": "reindent",
        "context": [
            { "key": "selection_empty", "operator": "equal", "operand": false },
            { "key": "has_next_field", "operator": "equal", "operand": false }
        ]
    },
    {
        "keys": ["tab"],
        "command": "reindent",
        "context": [
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_match", "operand": "^\\s*" }
        ]
    },

    // Emacs ctrl-g cancel stuff. (copied some from escape)
    // Clear out the default of GoTo Line
    { "keys": ["ctrl+g"], "command": "" },
    { "keys": ["ctrl+g"], "command": "single_selection", "context":
        [
            { "key": "num_selections", "operator": "not_equal", "operand": 1 }
        ]
    },
    { "keys": ["ctrl+g"], "command": "hide_panel", "args": {"cancel": true},
        "context":
        [
            { "key": "panel_visible", "operator": "equal", "operand": true }
        ]
    },
    { "keys": ["ctrl+g"], "command": "hide_overlay", "context":
        [
            { "key": "overlay_visible", "operator": "equal", "operand": true },
            { "key": "panel_has_focus", "operator": "equal", "operand": false }
        ]
    },
    { "keys": ["ctrl+g"], "command": "hide_auto_complete", "context":
        [
            { "key": "auto_complete_visible", "operator": "equal", "operand": true }
        ]
    },
    { "keys": ["ctrl+g"], "command": "hide_popup", "context":
        [
            { "key": "popup_visible", "operator": "equal", "operand": true }
        ]
    },

    // Setup Gotos
    { "keys": ["super+l"], "command": "show_overlay", "args": {"overlay": "goto", "text": ":"} },

    { "keys": ["super+."], "command": "goto_definition" },
    { "keys": ["super+shift+."], "command": "goto_definition", "args": {"side_by_side": true, "clear_to_right": true} },
    { "keys": ["super+j"], "command": "show_overlay", "args": {"overlay": "goto", "text": "@"} },
    { "keys": ["super+shift+j"], "command": "goto_symbol_in_project" },

    // Emacs-like key command to changing open buffers, but limited to window / project
    { "keys": ["ctrl+x", "b"], "command": "tab_filter" },


    //////////////
    // Syntax-Specific
    //////////////

    // Change between test and implementation
    { "keys": ["super+/"], "command": "rspec_toggle" }
]
